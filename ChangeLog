2006-01-04  Lydia van Dijk  <lvandijk@freenet.de>

	Recursive bindings ('perform rec ...').
	* test-rec.ml: New file.
	* Makefile (TESTS): Add 'test-rec.ml'.
	(test-rec.cmo:...): New explicit target.
	(test-rec:...): Dito.
	* pa_monad.ml (patt_to_exp): New function.
	(convert): Add parameter 'is_recursive'.  Perform conversion
	according to parameter.
	(Pcaml.expr): Duplicate all entries with 'perform' in them and add
	'rec' to indicate a recursive binding.  For camlp4 is a beast
	close to an LL(1)-parser, using 'r = OPT "rec"' does not work, as
	then the extended forms 'perform with' and 'perform with module'
	will not be recognized correctly anymore.  Oh well.

2006-01-03  Lydia van Dijk  <lvandijk@freenet.de>

	* COPYING, README: New files.
	* test-syntax.ml: Reverse equality tests from 'perform ... = .'
	to '. = perform ...'.  Keep both form where parenthesis are still
	required, because of lacking polymorphy of the 'bind' function.

2006-01-02  Christoph Spiel  <cspiel@try-to-spam.me>

	* Makefile (OCAMLCFLAGS): Remove preprocessor call.
	($(TESTS:.ml=.cmx): %.cmx: %.ml): New static rule for sources that
	require preprocessing.
	($(TESTS:.ml=.cmo): %.cmo: %.ml): Same for byte-code.

2006-01-02  Lydia van Dijk  <lvandijk@freenet.de>

	* test-syntax.ml (test_refutable_match_failure): New function.
	* Makefile (VERSION): Bump version number.

2006-01-01  Lydia van Dijk  <lvandijk@freenet.de>

	Use unit-test suite.
	* utest.mli, utest.ml: New files.
	* exception.ml (test_exception_monad): New function.
	* pythagorean-triples.ml (test_pythagorean_triples): Dito.
	* test-monad.ml (test_simple_expression): Use unit-test suite.
	(test_one_element_list): Dito.
	(test_two_element_list): Dito.
	(test_gcd): Dito.
	(all_tests): Remove.
	* test-syntax.ml: Use unit-test suite.

2005-12-31  Lydia van Dijk  <lvandijk@freenet.de>

	* exception.ml: New file.
	* pythagorean-triples.ml: Dito.
	* test-monad.ml: Dito.

2005-12-28  Christoph L. Spiel  <cspiel@try-to-spam.me>

	* Makefile: Switch from auto-generated dependencies (which never
	worked correctly) to explicit rules.
	(join-by): New macro.
	(SYNTAX_EXTENSION): Rename 'SYNTAX_EXTENSIONS' to
	'SYNTAX_EXTENSION'.
	(PP): Dito.
	(all): Dito.
	(OCAMLDEP): Remove.
	(depend): Dito.
	(.depend): Dito.
	(test): Use 'join-by' to abort tests after first failure.
	(distcheck): Add 'doc' to prerequisites.
	(FORCE): New target.
	(%.ml-pp: %.ml): Force target.
	(%.mli-gen: %.ml): Dito.

2005-12-20  Christoph L. Spiel  <cspiel@try-to-spam.me>

	* Makefile: Rewrite almost completely.

2005-12-18  Lydia van Dijk  <lvandijk@freenet.de>

	* pa_monad.ml: Beautify documentation.  Add section on known
	issues with the syntax extension.
	(exp_to_patt): Handle type restriction.
	(convert/glob_then): Rename parameters.
	(convert/glob_bind_irrefutable): Dito.
	(convert/glob_bind_refutable): Dito.
	(convert/folder): Reformat.
	(EXTEND): Rename some parameters.
	* test-syntax.ml: Add type-restriction test.  Add some tests that
	do not work yet as comments.

2005-12-17  Lydia van Dijk  <lvandijk@freenet.de>

	Extend syntax with 'with exp1 and exp2'-form.
	* pa_monad.ml: Document 'with exp1 and exp2'-form.
	(failure_text): New value.
	(default_bind_expr): New function.
	(default_failure_fun_expr): Dito.
	(default_failure_expr): Dito.
	(qualify): Dito.
	(EXTEND-Pcaml.expr): Rewrite using 'qualify'- and
	'default_*'-functions.
	(EXTEND-opt_failure_expr): New non-terminal.
	* test-syntax.ml: Update test environment to rename of 'fail' to
	'failwith'.  Add tests, e.g. for unit and parenthesized
	expressions.

	Rename 'fail' to 'failwith'.
	* pa_monad.ml: Document irrefutable patterns and 'failwith' usage.
	(convert/glob_bind_refutable): Rename 'fail' to 'failwith'.

	Rename 'mdo' to 'perform'.
	* pa_monad.ml: Rename 'mdo' to 'perform'.
	* test-syntax: Dito.

2005-12-11  Lydia van Dijk  <lvandijk@freenet.de>

	* Makefile: New file.
	* test-syntax.ml: New file.
	* pa_monad.ml: Minor documentation changes.
	(monadic_binding): New name for 'mondbind'.
	Add constructors 'BindMRef' and 'BindMIrref'.
	(exp_to_patt): Add handlers for several expressions (int, char,
	string, ...).
	(is_irrefutable_pattern): New function.
	(is_irrefutable_expression): Dito.
	(convert): New name for 'process'.
	Add branches 'BindMRef' and 'BindMIrref' to distinguish between
	refutable and irrefutable patterns.
	(EXTEND-monadic_binding): Distinguish between refutable and
	irrefutable patterns.
	(EXTEND-patt_label_ident): New non-terminal.
	(EXTEND-label_ipatt): Dito.
	(EXTEND-ipatt): Dito.
